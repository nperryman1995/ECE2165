/*
 * ubc.c
 *
 *  Created on: Nov 26, 2018
 *      Author: Mitch
 */

#include "ubc.h"
#include "xparameters.h"
#include "zscore_driver.h"
#include "cusum_driver.h"
#include "derivative_driver.h"

#define NUM_ZSCORE 0
#define NUM_CUSUM 0
#define NUM_DERIV 0

#ifndef XPAR_AXI_ZSCORE_0_BASEADDR
#define XPAR_AXI_ZSCORE_0_BASEADDR 0
#define XPAR_AXI_ZSCORE_1_BASEADDR 0
#define XPAR_AXI_ZSCORE_2_BASEADDR 0
#define NUM_ZSCORE 0
#endif
#ifndef XPAR_AXI_ZSCORE_1_BASEADDR
#define XPAR_AXI_ZSCORE_1_BASEADDR 0
#define XPAR_AXI_ZSCORE_2_BASEADDR 0
#define NUM_ZSCORE 1
#endif
#ifndef XPAR_AXI_ZSCORE_2_BASEADDR
#define XPAR_AXI_ZSCORE_2_BASEADDR 0
#define NUM_ZSCORE 2
#endif

#ifndef XPAR_AXI_CUSUM_0_BASEADDR
#define XPAR_AXI_CUSUM_0_BASEADDR 0
#define XPAR_AXI_CUSUM_1_BASEADDR 0
#define XPAR_AXI_CUSUM_2_BASEADDR 0
#define NUM_CUSUM 0
#endif
#ifndef XPAR_AXI_CUSUM_1_BASEADDR
#define XPAR_AXI_CUSUM_1_BASEADDR 0
#define XPAR_AXI_CUSUM_2_BASEADDR 0
#define NUM_CUSUM 1
#endif
#ifndef XPAR_AXI_CUSUM_2_BASEADDR
#define XPAR_AXI_CUSUM_2_BASEADDR 0
#define NUM_CUSUM 2
#endif

#ifndef XPAR_AXI_DERIV_0_BASEADDR
#define XPAR_AXI_DERIV_0_BASEADDR 0
#define XPAR_AXI_DERIV_1_BASEADDR 0
#define XPAR_AXI_DERIV_2_BASEADDR 0
#define NUM_DERIV 0
#endif
#ifndef XPAR_AXI_DERIV_1_BASEADDR
#define XPAR_AXI_DERIV_1_BASEADDR 0
#define XPAR_AXI_DERIV_2_BASEADDR 0
#define NUM_DERIV 1
#endif
#ifndef XPAR_AXI_DERIV_2_BASEADDR
#define XPAR_AXI_DERIV_2_BASEADDR 0
#define NUM_DERIV 2
#endif


Zscore_Control_t zs_ctrls[NUM_ZSCORE];
Cusum_Control_t cs_ctrls[NUM_CUSUM];
Deriv_Control_t dr_ctrls[NUM_DERIV];

void setup(void){
	int i;
	for(i=0;i<NUM_ZSCORE;i++){
		Zscore_setup(&(zs_ctrls[i]), (u32 *)XPAR_AXI_ZSCORE_0_BASEADDR, 8);
	}
	for(i=0;i<NUM_CUSUM;i++){

	}
	for(i=0;i<NUM_DERIV;i++){

	}
}
void addData(u32 data);
u32 detectAnomaly(u32 zscore_threshold, u32 cusum_threshold, u32 deriv_threshold);
